{"dependencies":[{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"../EventEmitter/RCTDeviceEventEmitter","data":{"isAsync":false}},{"name":"../BatchedBridge/NativeModules","data":{"isAsync":false}},{"name":"fbjs/lib/invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _extends = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/extends\");\n\n  var RCTDeviceEventEmitter = _$$_REQUIRE(_dependencyMap[1], \"../EventEmitter/RCTDeviceEventEmitter\");\n\n  var RCTSettingsManager = _$$_REQUIRE(_dependencyMap[2], \"../BatchedBridge/NativeModules\").SettingsManager;\n\n  var invariant = _$$_REQUIRE(_dependencyMap[3], \"fbjs/lib/invariant\");\n\n  var subscriptions = [];\n  var Settings = {\n    _settings: RCTSettingsManager && RCTSettingsManager.settings,\n    get: function get(key) {\n      return this._settings[key];\n    },\n    set: function set(settings) {\n      this._settings = _extends(this._settings, settings);\n      RCTSettingsManager.setValues(settings);\n    },\n    watchKeys: function watchKeys(keys, callback) {\n      if (typeof keys === 'string') {\n        keys = [keys];\n      }\n\n      invariant(Array.isArray(keys), 'keys should be a string or array of strings');\n      var sid = subscriptions.length;\n      subscriptions.push({\n        keys: keys,\n        callback: callback\n      });\n      return sid;\n    },\n    clearWatch: function clearWatch(watchId) {\n      if (watchId < subscriptions.length) {\n        subscriptions[watchId] = {\n          keys: [],\n          callback: null\n        };\n      }\n    },\n    _sendObservations: function _sendObservations(body) {\n      var _this = this;\n\n      Object.keys(body).forEach(function (key) {\n        var newValue = body[key];\n        var didChange = _this._settings[key] !== newValue;\n        _this._settings[key] = newValue;\n\n        if (didChange) {\n          subscriptions.forEach(function (sub) {\n            if (sub.keys.indexOf(key) !== -1 && sub.callback) {\n              sub.callback();\n            }\n          });\n        }\n      });\n    }\n  };\n  RCTDeviceEventEmitter.addListener('settingsUpdated', Settings._sendObservations.bind(Settings));\n  module.exports = Settings;\n});","map":[[2,0,11,0],[6,0,13,0],[6,6,13,6,"RCTDeviceEventEmitter"],[6,27,13,27],[6,30,13,30,"require"],[6,41,13,37],[6,101,13,0],[8,0,14,0],[8,6,14,6,"RCTSettingsManager"],[8,24,14,24],[8,27,14,27,"require"],[8,38,14,34],[8,91,14,27],[8,92,14,69,"SettingsManager"],[8,107,14,0],[10,0,16,0],[10,6,16,6,"invariant"],[10,15,16,15],[10,18,16,18,"require"],[10,29,16,25],[10,70,16,0],[12,0,18,0],[12,6,18,6,"subscriptions"],[12,19,18,70],[12,22,18,73],[12,24,18,0],[13,0,20,0],[13,6,20,6,"Settings"],[13,14,20,14],[13,17,20,17],[14,0,21,2,"_settings"],[14,4,21,2,"_settings"],[14,13,21,11],[14,15,21,13,"RCTSettingsManager"],[14,33,21,31],[14,37,21,35,"RCTSettingsManager"],[14,55,21,53],[14,56,21,54,"settings"],[14,64,20,17],[15,0,23,2,"get"],[15,4,23,2,"get"],[15,7,20,17],[15,22,23,6,"key"],[15,25,20,17],[15,27,23,26],[16,0,24,4],[16,13,24,11],[16,18,24,16,"_settings"],[16,27,24,11],[16,28,24,26,"key"],[16,31,24,11],[16,32,24,4],[17,0,25,3],[17,5,20,17],[18,0,27,2,"set"],[18,4,27,2,"set"],[18,7,20,17],[18,22,27,6,"settings"],[18,30,20,17],[18,32,27,24],[19,0,28,4],[19,11,28,9,"_settings"],[19,20,28,4],[19,23,28,21],[19,32,28,35],[19,37,28,40,"_settings"],[19,46,28,21],[19,48,28,51,"settings"],[19,56,28,21],[19,57,28,4],[20,0,29,4,"RCTSettingsManager"],[20,6,29,4,"RCTSettingsManager"],[20,24,29,22],[20,25,29,23,"setValues"],[20,34,29,4],[20,35,29,33,"settings"],[20,43,29,4],[21,0,30,3],[21,5,20,17],[22,0,32,2,"watchKeys"],[22,4,32,2,"watchKeys"],[22,13,20,17],[22,34,32,12,"keys"],[22,38,20,17],[22,40,32,42,"callback"],[22,48,20,17],[22,50,32,70],[23,0,33,4],[23,10,33,8],[23,17,33,15,"keys"],[23,21,33,8],[23,26,33,24],[23,34,33,4],[23,36,33,34],[24,0,34,6,"keys"],[24,8,34,6,"keys"],[24,12,34,10],[24,15,34,13],[24,16,34,14,"keys"],[24,20,34,13],[24,21,34,6],[25,0,35,5],[27,0,37,4,"invariant"],[27,6,37,4,"invariant"],[27,15,37,13],[27,16,38,6,"Array"],[27,21,38,11],[27,22,38,12,"isArray"],[27,29,38,6],[27,30,38,20,"keys"],[27,34,38,6],[27,35,37,13],[27,37,39,6],[27,82,37,13],[27,83,37,4],[28,0,42,4],[28,10,42,10,"sid"],[28,13,42,13],[28,16,42,16,"subscriptions"],[28,29,42,29],[28,30,42,30,"length"],[28,36,42,4],[29,0,43,4,"subscriptions"],[29,6,43,4,"subscriptions"],[29,19,43,17],[29,20,43,18,"push"],[29,24,43,4],[29,25,43,23],[30,0,43,24,"keys"],[30,8,43,24,"keys"],[30,12,43,28],[30,14,43,30,"keys"],[30,18,43,23],[31,0,43,36,"callback"],[31,8,43,36,"callback"],[31,16,43,44],[31,18,43,46,"callback"],[32,0,43,23],[32,7,43,4],[33,0,44,4],[33,13,44,11,"sid"],[33,16,44,4],[34,0,45,3],[34,5,20,17],[35,0,47,2,"clearWatch"],[35,4,47,2,"clearWatch"],[35,14,20,17],[35,36,47,13,"watchId"],[35,43,20,17],[35,45,47,30],[36,0,48,4],[36,10,48,8,"watchId"],[36,17,48,15],[36,20,48,18,"subscriptions"],[36,33,48,31],[36,34,48,32,"length"],[36,40,48,4],[36,42,48,40],[37,0,49,6,"subscriptions"],[37,8,49,6,"subscriptions"],[37,21,49,19],[37,22,49,20,"watchId"],[37,29,49,19],[37,30,49,6],[37,33,49,31],[38,0,49,32,"keys"],[38,10,49,32,"keys"],[38,14,49,36],[38,16,49,38],[38,18,49,31],[39,0,49,42,"callback"],[39,10,49,42,"callback"],[39,18,49,50],[39,20,49,52],[40,0,49,31],[40,9,49,6],[41,0,50,5],[42,0,51,3],[42,5,20,17],[43,0,53,2,"_sendObservations"],[43,4,53,2,"_sendObservations"],[43,21,20,17],[43,50,53,20,"body"],[43,54,20,17],[43,56,53,34],[44,0,53,34],[46,0,54,4,"Object"],[46,6,54,4,"Object"],[46,12,54,10],[46,13,54,11,"keys"],[46,17,54,4],[46,18,54,16,"body"],[46,22,54,4],[46,24,54,22,"forEach"],[46,31,54,4],[46,32,54,30],[46,42,54,30,"key"],[46,45,54,33],[46,47,54,37],[47,0,55,6],[47,12,55,12,"newValue"],[47,20,55,20],[47,23,55,23,"body"],[47,27,55,27],[47,28,55,28,"key"],[47,31,55,27],[47,32,55,6],[48,0,56,6],[48,12,56,12,"didChange"],[48,21,56,21],[48,24,56,24],[48,29,56,28],[48,30,56,29,"_settings"],[48,39,56,24],[48,40,56,39,"key"],[48,43,56,24],[48,49,56,48,"newValue"],[48,57,56,6],[49,0,57,6],[49,8,57,6],[49,13,57,10],[49,14,57,11,"_settings"],[49,23,57,6],[49,24,57,21,"key"],[49,27,57,6],[49,31,57,28,"newValue"],[49,39,57,6],[51,0,59,6],[51,12,59,10,"didChange"],[51,21,59,6],[51,23,59,21],[52,0,60,8,"subscriptions"],[52,10,60,8,"subscriptions"],[52,23,60,21],[52,24,60,22,"forEach"],[52,31,60,8],[52,32,60,30],[52,42,60,30,"sub"],[52,45,60,33],[52,47,60,37],[53,0,61,10],[53,16,61,14,"sub"],[53,19,61,17],[53,20,61,18,"keys"],[53,24,61,14],[53,25,61,23,"indexOf"],[53,32,61,14],[53,33,61,31,"key"],[53,36,61,14],[53,42,61,40],[53,43,61,41],[53,44,61,14],[53,48,61,46,"sub"],[53,51,61,49],[53,52,61,50,"callback"],[53,60,61,10],[53,62,61,60],[54,0,62,12,"sub"],[54,14,62,12,"sub"],[54,17,62,15],[54,18,62,16,"callback"],[54,26,62,12],[55,0,63,11],[56,0,64,9],[56,11,60,8],[57,0,65,7],[58,0,66,5],[58,7,54,4],[59,0,67,3],[60,0,20,17],[60,3,20,0],[61,0,70,0,"RCTDeviceEventEmitter"],[61,2,70,0,"RCTDeviceEventEmitter"],[61,23,70,21],[61,24,70,22,"addListener"],[61,35,70,0],[61,36,71,2],[61,53,70,0],[61,55,72,2,"Settings"],[61,63,72,10],[61,64,72,11,"_sendObservations"],[61,81,72,2],[61,82,72,29,"bind"],[61,86,72,2],[61,87,72,34,"Settings"],[61,95,72,2],[61,96,70,0],[62,0,75,0,"module"],[62,2,75,0,"module"],[62,8,75,6],[62,9,75,7,"exports"],[62,16,75,0],[62,19,75,17,"Settings"],[62,27,75,0]]},"type":"js/module"}]}